{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/styles.js","webpack:///./src/index.js","webpack:///./test/src/test.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","StyleManager","element","styles","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","keys","Symbol","iterator","next","done","style","setProperty","err","return","x","y","width","height","custom","left","top","el","prop","console","log","defaultStyles","button","padding","margin","font-size","color","background-color","border","cursor","position","input","label","line-height","overflow","word-wrap","max-width","image","object-fit","_styles","Library","root","ctx","global","_classCallCheck","this","Number","toRad","Math","PI","toDeg","canvas","document","querySelector","getContext","turtle","rot","pen","window","fillStyle","strokeStyle","radius","beginPath","arc","fill","deg","g","b","a","penColor","lineWidth","dir","dist","x1","y1","angle","getDirection","L","x2","sin","y2","cos","moveTo","lineTo","stroke","length","center","start","end","arcRight","id","type","handler","getElementById","addEventListener","event","text","createElement","innerText","genCustom","assign","apply","appendChild","placeholder","option1","option2","nodeName","indexOf","error","checked","url","img","src","hidden","remove","_index","lib","onEvent","ev","getText","textInput","textLabel"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","/**\r\n * Module to keep track of styling elements\r\n * @module styles\r\n */\r\n\r\n/**\r\n * Container for code-api default styling of different elements\r\n * @constant\r\n */\r\nconst defaultStyles = {\r\n  button: {\r\n    \"padding\": \"0px\",\r\n    \"margin\": \"0px\",\r\n    \"height\": \"30px\",\r\n    \"width\": \"80px\",\r\n    \"font-size\": \"14px\",\r\n    \"color\": \"rgb(255, 255, 255)\",\r\n    \"background-color\": \"rgb(26, 188, 156)\",\r\n    \"left\": \"90px\",\r\n    \"top\": \"60px\",\r\n    \"border\": \"none\",\r\n    \"cursor\": \"pointer\",\r\n    \"position\": \"absolute\"\r\n  },\r\n  input: {\r\n    \"margin\": \"0px\",\r\n    \"width\": \"200px\",\r\n    \"height\": \"30px\",\r\n    \"color\": \"rgb(0, 0, 0)\",\r\n    \"left\": \"25px\",\r\n    \"top\": \"165px\",\r\n    \"border\": \"1px solid #999\",\r\n    \"padding\": \"5px\",\r\n    \"position\": \"absolute\"\r\n  },\r\n  label: {\r\n    \"padding\": \"2px\",\r\n    \"line-height\": \"1\",\r\n    \"font-size\": \"14px\",\r\n    \"overflow\": \"hidden\",\r\n    \"word-wrap\": \"break-word\",\r\n    \"color\": \"rgb(51, 51, 51)\",\r\n    \"max-width\": \"320px\",\r\n    \"width\": \"32px\",\r\n    \"height\": \"19px\",\r\n    \"position\": \"absolute\"\r\n  },\r\n  image: {\r\n    \"height\": \"100px\",\r\n    \"width\": \"100px\",\r\n    \"position\": \"absolute\",\r\n    \"left\": \"25px\",\r\n    \"top\": \"245px\",\r\n    \"margin\": \"0px\",\r\n    \"object-fit\": \"contain\"\r\n  }\r\n}\r\n\r\n/**\r\n * Manage code-api elements' styles\r\n */\r\nclass StyleManager {\r\n  /**\r\n   * Apply an object with CSS key-value pairs to \r\n   * @param {HTMLElement} element Element to apply styles\r\n   * @param {object} styles Style object\r\n   */\r\n  static apply(element, styles) {\r\n    for (let style of Object.keys(styles)) {\r\n      element.style.setProperty(style, styles[style]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Generate position and size styles for an element\r\n   * @param {number} x X-coordinate\r\n   * @param {number} y Y-coordinate\r\n   * @param {number} width Width\r\n   * @param {number} height Height\r\n   * @returns {object} CSS object\r\n   */\r\n  static genCustom(x, y, width, height) {\r\n    const custom = {};\r\n    if (width) custom.width = width + \"px\";\r\n    if (height) custom.height = height + \"px\";\r\n    if (x || x === 0) custom.left = x + \"px\";\r\n    if (y || x === 0) custom.top = y + \"px\";\r\n    return custom;\r\n  }\r\n\r\n  /**\r\n   * Set a supported style property seamlessly\r\n   * @param {HTMLElement} el Target element\r\n   * @param {string} prop Property to set\r\n   * @param value Value to assign\r\n   */\r\n  static setProperty(el, prop, value) {\r\n    console.log(\"setting properties is coming soon\");\r\n  }\r\n}\r\n\r\nexport { defaultStyles, StyleManager };\r\n","/**\r\n * Code.org API library\r\n * @module code-api\r\n */\r\n\r\nimport { defaultStyles, StyleManager }\r\n  from './styles';\r\n\r\n/**\r\n * Unofficial code.org api recreation for ES6\r\n */\r\nclass Library {\r\n  /**\r\n   * Create a new instance of the library\r\n   * @param {string|HTMLElement} root DOM node for ui elements\r\n   * @param {string|CanvasRenderingContext2D} ctx Canvas 2D context or a string selector for a canvas element\r\n   * @param {number} width Canvas width\r\n   * @param {number} height canvas height\r\n   * @param {boolean} [global] Make the class members pollute the global namespace (not recommended)\r\n   */\r\n  constructor(root, ctx, width, height, global) {\r\n    if (typeof (Number.prototype.toRad) === \"undefined\") {\r\n      Number.prototype.toRad = function () {\r\n        return this * Math.PI / 180;\r\n      }\r\n    }\r\n    if (typeof (Number.prototype.toDeg) === \"undefined\") {\r\n      Number.prototype.toDeg = function () {\r\n        return this * 180 / Math.PI;\r\n      }\r\n    }\r\n    if (typeof ctx === \"string\") {\r\n      let canvas = document.querySelector(ctx);\r\n      this.ctx = canvas.getContext(\"2d\");\r\n    }\r\n    else this.ctx = ctx;\r\n    if (typeof root === \"string\") {\r\n      this.root = document.querySelector(root);\r\n    }\r\n    else this.root = root;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.turtle = {\r\n      x: width / 2,\r\n      y: height / 2,\r\n      color: \"#000\",\r\n      rot: 0,\r\n      pen: true,\r\n      width: 5\r\n    };\r\n\r\n    console.log(this);\r\n    if (global) {\r\n      for (let i in this) {\r\n        window[i] = this[i];\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Moves turtle to provided coordinates\r\n   * @param {number} x x-coordinate to move turtle to\r\n   * @param {number} y y-coordinate to move turtle to\r\n   */\r\n  moveTo(x, y) {\r\n    this.turtle.x = x;\r\n    this.turtle.y = y;\r\n  }\r\n\r\n  /**\r\n   * Change the color of turtle strokes\r\n   * @param {color} color CSS-compatible color string\r\n   */\r\n  penColor(color) {\r\n    this.ctx.fillStyle = color;\r\n    this.ctx.strokeStyle = color;\r\n    this.turtle.color = color;\r\n  }\r\n\r\n  /**\r\n   * Draw a dot at the turtle's current location\r\n   * @param {number} radius Radius of the dot\r\n   */\r\n  dot(radius) {\r\n    this.ctx.beginPath();\r\n    this.ctx.arc(this.turtle.x, this.turtle.y, radius, 0, Math.PI * 2, true);\r\n    this.ctx.fill();\r\n  }\r\n\r\n  /**\r\n   * Turn the turtle to the right\r\n   * @param {number} deg Degrees to turn the turtle\r\n   */\r\n  turnRight(deg) {\r\n    this.turtle.rot += deg || 90;\r\n  }\r\n\r\n  /**\r\n   * Turn the turtle to the left\r\n   * @param {number} deg Degrees to turn the turtle\r\n   */\r\n  turnLeft(deg) {\r\n    this.turtle.rot -= deg || 90;\r\n  }\r\n\r\n  /**\r\n   * Turn the turtle to exactly the angle specified\r\n   * @param {number} deg Agle to turn the turtle to\r\n   */\r\n  turnTo(deg) {\r\n    this.turtle.rot = deg || 0;\r\n  }\r\n\r\n  /**\r\n   * Get the x-position of the turtle\r\n   * @returns {number} X-coordinate\r\n   */\r\n  getX() {\r\n    return this.turtle.x;\r\n  }\r\n\r\n  /**\r\n   * Get the y-position of the turtle\r\n   * @returns {number} Y-coordinate\r\n   */\r\n  getY() {\r\n    return this.turtle.y;\r\n  }\r\n\r\n  /**\r\n   * Pick up the turtle's pen\r\n   */\r\n  penUp() {\r\n    this.turtle.pen = false;\r\n  }\r\n\r\n  /**\r\n   * Put down the turtle's pen\r\n   */\r\n  penDown() {\r\n    this.turtle.pen = true;\r\n  }\r\n\r\n  /**\r\n   * Change the color of the turtle pen using rgb color values\r\n   * @param {number} r Red value\r\n   * @param {number} g Green value\r\n   * @param {number} b Blue value\r\n   * @param {number} a Alpha value\r\n   */\r\n  penRGB(r, g, b, a) {\r\n    if (a) {\r\n      this.penColor(`rgba(${r}, ${g}, ${b}, ${a})`);\r\n    }\r\n    else {\r\n      this.penColor(`rgb(${r}, ${g}, ${b})`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Change the width of the turtle's stroke\r\n   * @param {number} width Width of the stroke\r\n   */\r\n  penWidth(width) {\r\n    this.ctx.lineWidth = width;\r\n    this.turtle.width = width;\r\n  }\r\n\r\n  /**\r\n   * Get the current angle the turtle is facing\r\n   * @returns {number} Angle turtle is facing\r\n   */\r\n  getDirection() {\r\n    let dir = this.turtle.rot;\r\n    while (dir < 0) dir += 360;\r\n    while (dir >= 360) dir -= 360;\r\n    return dir;\r\n  }\r\n\r\n  /**\r\n   * Move the turtle forward\r\n   * @param {number} dist Pixels to travel\r\n   */\r\n  moveForward(dist) {\r\n    let x1 = this.turtle.x;\r\n    let y1 = this.turtle.y;\r\n    let angle = this.getDirection().toRad();\r\n    let L = dist || 25;\r\n    let x2 = x1 + Math.sin(angle) * L;\r\n    let y2 = y1 - Math.cos(angle) * L;\r\n    if (this.turtle.pen) {\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(x1, y1);\r\n      this.ctx.lineTo(x2, y2);\r\n      this.ctx.stroke();\r\n    }\r\n    this.turtle.x = x2;\r\n    this.turtle.y = y2;\r\n  }\r\n\r\n  /**\r\n   * Move the turtle backward\r\n   * @param {number} dist Pixels to travel\r\n   */\r\n  moveBackward(dist) {\r\n    let x1 = this.turtle.x;\r\n    let y1 = this.turtle.y;\r\n    let angle = this.getDirection().toRad();\r\n    let length = dist || 25;\r\n    let x2 = x1 - Math.sin(angle) * length;\r\n    let y2 = y1 + Math.cos(angle) * length;\r\n    if (this.turtle.pen) {\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(x1, y1);\r\n      this.ctx.lineTo(x2, y2);\r\n      this.ctx.stroke();\r\n    }\r\n    this.turtle.x = x2;\r\n    this.turtle.y = y2;\r\n  }\r\n\r\n  /**\r\n   * Move to turtle to explicit x & y coordinates\r\n   * @param {number} x new x-position\r\n   * @param {number} y new y-position\r\n   */\r\n  move(x, y) {\r\n    let x1 = this.turtle.x;\r\n    let y1 = this.turtle.y;\r\n    let x2 = x1 + x;\r\n    let y2 = y1 + y;\r\n    if (this.turtle.pen) {\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(x1, y1);\r\n      this.ctx.lineTo(x2, y2);\r\n      this.ctx.stroke();\r\n    }\r\n    this.turtle.x = x2;\r\n    this.turtle.y = y2;\r\n  }\r\n\r\n  /**\r\n   * Move the turtle in the path of an arc where a circle is tangent \r\n   * on the right side of the direction that the turtle is facing\r\n   * @param {number} angle Arc angle of the circle\r\n   * @param {number} radius Radius of the circle\r\n   * @param {boolean} left Turn left instead of right?\r\n   */\r\n  arcRight(angle, radius, left) {\r\n    const center = left ? -90 : 90;\r\n    const deg = left ? -angle : angle;\r\n    if (this.ctx) {\r\n      let x1 = this.turtle.x + radius *\r\n        Math.sin(2 * Math.PI * (this.turtle.rot + center) / 360);\r\n      let y1 = this.turtle.y - radius *\r\n        Math.cos(2 * Math.PI * (this.turtle.rot + center) / 360);\r\n\r\n      let start = 2 * Math.PI * (this.turtle.rot + (left ? 0 : 180)) / 360;\r\n      let end = start + (2 * Math.PI * deg / 360);\r\n\r\n      this.ctx.beginPath();\r\n      this.ctx.arc(x1, y1, radius, start, end, left);\r\n      this.ctx.stroke();\r\n\r\n      this.turtle.rot = (this.turtle.rot + deg + 360) % 360;\r\n      let x2 = radius * Math.cos(2 * Math.PI * this.turtle.rot / 360);\r\n      let y2 = radius * Math.sin(2 * Math.PI * this.turtle.rot / 360);\r\n      this.turtle.x = x1 + (left ? x2 : -x2);\r\n      this.turtle.y = y1 + (left ? y2 : -y2);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Same as `arcLeft`, but the circle is on the left side\r\n   * @param {number} angle Arc angle of the circle\r\n   * @param {number} radius Radius of the circle\r\n   */\r\n  arcLeft(angle, radius) {\r\n    this.arcRight(angle, radius, true);\r\n  }\r\n\r\n  /**\r\n   * Listen for an event from an element\r\n   * @param {string} id Id of element to listen to\r\n   * @param {string} type Type of event to listen for\r\n   * @param {function} handler Callback handler\r\n   */\r\n  onEvent(id, type, handler) {\r\n    const el = document.getElementById(id);\r\n    el.addEventListener(type, (event) => {\r\n      handler(event);\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Create a new button\r\n   * @param {string} id Id of new button\r\n   * @param {string} text Text content of button\r\n   * @param {number} x Pixels from left\r\n   * @param {number} y Pixels from top\r\n   * @param {number} width Width of button\r\n   * @param {number} height Height of button\r\n   */\r\n  button(id, text, x, y, width, height) {\r\n    const button = document.createElement('button');\r\n    button.id = id;\r\n    button.innerText = text;\r\n\r\n    const custom = StyleManager.genCustom(x, y, width, height);\r\n    const styles = Object.assign(defaultStyles.button, custom);\r\n    StyleManager.apply(button, styles);\r\n    this.root.appendChild(button);\r\n  }\r\n\r\n  /**\r\n   * Create a text input\r\n   * @param {string} id Id of the text field\r\n   * @param {string} placeholder Text to show before a user enters text\r\n   * @param {number} x X-coordinate\r\n   * @param {number} y X-coordinate\r\n   * @param {number} width Width of input\r\n   * @param {number} height Height of input\r\n   */\r\n  textInput(id, placeholder, x, y, width, height) {\r\n    const input = document.createElement('input');\r\n    input.id = id;\r\n    input.placeholder = placeholder;\r\n\r\n    const custom = StyleManager.genCustom(x, y, width, height);\r\n    const styles = Object.assign(defaultStyles.input, custom);\r\n    StyleManager.apply(input, styles);\r\n    this.root.appendChild(input);\r\n  }\r\n\r\n  /**\r\n   * Create a text label\r\n   * @param {string} id Id of new label\r\n   * @param {string} text Text content of label\r\n   * @param {number} x X-coordinate\r\n   * @param {number} y X-coordinate\r\n   * @param {number} width Width of label\r\n   * @param {number} height Height of label\r\n   */\r\n  textLabel(id, text, x, y, width, height) {\r\n    const label = document.createElement('label');\r\n    label.id = id;\r\n    label.innerText = text;\r\n\r\n    const custom = StyleManager.genCustom(x, y, width, height);\r\n    const styles = Object.assign(defaultStyles.label, custom);\r\n    StyleManager.apply(label, styles);\r\n    this.root.appendChild(label);\r\n  }\r\n\r\n  dropDown(id, option1, option2) {\r\n    console.log(\"drop-downs are not supported yet\")\r\n  }\r\n  /**\r\n   * Get the text content of an element\r\n   * Finds the most appropriate text field of an element\r\n   * for you\r\n   * @param {string} id Element id\r\n   * @returns {string} Text content of element\r\n   */\r\n  getText(id) {\r\n    const el = document.getElementById(id);\r\n    if (el.nodeName === \"INPUT\") {\r\n      return el.value;\r\n    }\r\n    else {\r\n      return el.innerText;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the text content of an element to a string\r\n   * @param {string} id Element id\r\n   * @param {string} text Text to set\r\n   */\r\n  setText(id, text) {\r\n    const el = document.getElementById(id);\r\n    const validNodes = [\r\n      \"LABEL\",\r\n      \"SPAN\",\r\n      \"P\",\r\n      \"H1\",\r\n      \"H2\",\r\n      \"H3\",\r\n      \"H4\",\r\n      \"H5\",\r\n      \"H6\"\r\n    ]\r\n    if (el.nodeName === \"INPUT\") {\r\n      el.value = text;\r\n    }\r\n    else if (validNodes.indexOf(el.nodeName) !== -1) {\r\n      el.innerText = text;\r\n    }\r\n    else {\r\n      console.error(\"Invalid element to get text from.\");\r\n    }\r\n  }\r\n\r\n  checkbox(id, checked) {\r\n    console.log(\"checkboxes are not available yet\")\r\n  }\r\n\r\n  /**\r\n   * Create an image element\r\n   * @param {string} id Element id\r\n   * @param {string} url Image url\r\n   * @param {number} x X-coordiante\r\n   * @param {number} y Y-coordinate\r\n   * @param {number} width Width\r\n   * @param {number} height Height\r\n   */\r\n  image(id, url, x, y, width, height) {\r\n    const img = document.createElement('img');\r\n    img.id = id;\r\n    img.src = url;\r\n\r\n    const custom = StyleManager.genCustom(x, y, width, height);\r\n    const styles = Object.assign(defaultStyles.image, custom);\r\n    StyleManager.apply(img, styles);\r\n    this.root.appendChild(img);\r\n  }\r\n\r\n  /**\r\n   * Get the url of an image on the page\r\n   * @param {string} id Id of image element\r\n   * @returns {string} Image URL\r\n   */\r\n  getImageUrl(id) {\r\n    const img = document.getElementById(id);\r\n    if (img.nodeName === \"IMG\") {\r\n      return img.src;\r\n    }\r\n    else {\r\n      console.error(\"Only image elements are allowed.\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the url of an image element\r\n   * @param {string} id Id of image element\r\n   * @param {string} url Image url\r\n   */\r\n  setImageUrl(id, url) {\r\n    const img = document.getElementById(id);\r\n    if (img.nodeName === \"IMG\") {\r\n      img.src = url;\r\n    }\r\n    else {\r\n      console.error(\"Only image elements are allowed.\");\r\n    }\r\n  }\r\n\r\n  playSound(src) {\r\n\r\n  }\r\n\r\n  stopSound(src) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Show a hidden element\r\n   * @param {string} id Element id\r\n   */\r\n  showElement(id) {\r\n    document.getElementById(id).hidden = false;\r\n  }\r\n\r\n  /**\r\n   * Hide a visible element\r\n   * @param {string} id Element id\r\n   */\r\n  hideElement(id) {\r\n    document.getElementById(id).hidden = true;\r\n  }\r\n\r\n  /**\r\n   * Delete an element\r\n   * @param {string} id Element id\r\n   */\r\n  deleteElement(id) {\r\n    const el = document.querySelector(id);\r\n    el.remove();\r\n  }\r\n\r\n  /**\r\n   * Change the position of an existing element\r\n   * @param {string} id Element id\r\n   * @param {number} x X-coordinate\r\n   * @param {number} y Y-coordinate\r\n   * @param {number} width Width\r\n   * @param {number} height Height\r\n   */\r\n  setPosition(id, x, y, width, height) {\r\n    const el = document.querySelector(id);\r\n\r\n    const styles = StyleManager.genCustom(x, y, width, height);\r\n    StyleManager.apply(el, styles);\r\n  }\r\n\r\n  /**\r\n   * Set only the width and height of an element\r\n   * @param {string} id Element id\r\n   * @param {number} width Width\r\n   * @param {number} height Height\r\n   */\r\n  setSize(id, width, height) {\r\n    const el = document.querySelector(id);\r\n    const x = el.style.left, y = el.style.top;\r\n\r\n    const styles = StyleManager.genCustom(x, y, width, height);\r\n    StyleManager.apply(el, styles);\r\n  }\r\n\r\n  getProperty(id, property) {\r\n\r\n  }\r\n\r\n  setProperty(id, property, value) {\r\n\r\n  }\r\n\r\n  write(text) {\r\n\r\n  }\r\n\r\n  getXPosition(id) {\r\n\r\n  }\r\n\r\n  getYPosition(id) {\r\n\r\n  }\r\n\r\n  setScreen(id) {\r\n    console.log(\"Sorry! Screens are not supported yet!\")\r\n  }\r\n}\r\n\r\nexport default Library;\r\n","import Library from '../../src/index';\r\n\r\nconst lib = new Library(\"#app-root\", \"#canvas\", 300, 200);\r\nconsole.log(lib);\r\n\r\nlib.image(\"test-image\", \"https://i.redd.it/f7sp2hsovtx01.jpg\", 0, 0, 100, 100);\r\nlib.button(\"test-btn\", \"Hello, world!\", 100, 50, 200, 50);\r\nlib.onEvent(\"test-btn\", \"click\", function (ev) {\r\n  console.log(lib.getText(\"test-input\"));\r\n});\r\n\r\nlib.textInput(\"test-input\", \"Type here!\", 100, 250, 200, 50);\r\n\r\nlib.textLabel(\"test-label\", \"Label\", 300, 0, 50, 50);\r\n"],"sourceRoot":""}